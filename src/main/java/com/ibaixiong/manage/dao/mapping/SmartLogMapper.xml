<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ibaixiong.manage.dao.smart.SmartLogDao">
	<resultMap id="BaseResultMap" type="com.ibaixiong.entity.SmartLog">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="bxid" property="bxid" jdbcType="CHAR" />
		<result column="bxcode" property="bxcode" jdbcType="CHAR" />
		<result column="type" property="type" jdbcType="BIT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="ip" property="ip" jdbcType="CHAR" />
		<result column="log_des" property="logDes" jdbcType="VARCHAR" />
		<association column="user_id" property="user"
			select="com.ibaixiong.manage.dao.bbs.UserDao.selectByPrimaryKey" />
	</resultMap>
	<sql id="Base_Column_List">
		id, bxid, bxcode, type, create_time, user_id, ip, log_des
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from tbl_smart_log
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByBxcode" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from tbl_smart_log
		where bxcode = #{bxcode,jdbcType=CHAR} and user_id!=0
		order by id desc 
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tbl_smart_log
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ibaixiong.entity.SmartLog">
		insert into tbl_smart_log (id, bxid, bxcode, type,
		create_time, user_id, ip,
		log_des)
		values (#{id,jdbcType=INTEGER}, #{bxid,jdbcType=CHAR},
		#{bxcode,jdbcType=CHAR}, #{type,jdbcType=BIT},
		#{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER},
		#{ip,jdbcType=CHAR},
		#{logDes,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.ibaixiong.entity.SmartLog">
		insert into tbl_smart_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="bxid != null">
				bxid,
			</if>
			<if test="bxcode != null">
				bxcode,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="ip != null">
				ip,
			</if>
			<if test="logDes != null">
				log_des,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="bxid != null">
				#{bxid,jdbcType=CHAR},
			</if>
			<if test="bxcode != null">
				#{bxcode,jdbcType=CHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="ip != null">
				#{ip,jdbcType=CHAR},
			</if>
			<if test="logDes != null">
				#{logDes,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ibaixiong.entity.SmartLog">
		update tbl_smart_log
		<set>
			<if test="bxid != null">
				bxid = #{bxid,jdbcType=CHAR},
			</if>
			<if test="bxcode != null">
				bxcode = #{bxcode,jdbcType=CHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="ip != null">
				ip = #{ip,jdbcType=CHAR},
			</if>
			<if test="logDes != null">
				log_des = #{logDes,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ibaixiong.entity.SmartLog">
		update tbl_smart_log
		set bxid = #{bxid,jdbcType=CHAR},
		bxcode = #{bxcode,jdbcType=CHAR},
		type = #{type,jdbcType=BIT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		user_id = #{userId,jdbcType=INTEGER},
		ip = #{ip,jdbcType=CHAR},
		log_des = #{logDes,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>